swagger: '2.0'
info:
  description: >
    The VAS Management API is a REST API which has predictable, resource-oriented URLs and uses other HTTP features such as HTTP verbs for each operation,HTTP authentication and HTTP status information to indicate API success or errors.
    
    The picture below shows the relationship between the entities and the main resources.
    
    1. **Service Provider** - The Service Provider is responsible for providing the service for the user.
    
    
    2. **Channel Provider** - The Channel Provider is resposible for a subscription channel and is responsible for selling the service from the service prodiver. Once a user subscribes a service through a channel the service provider will be notified about that event.
    
    
    3. **Subscription** - Handles all the operations regarding a Subscription, such as create, delete or update a subscription.
    
    
    4. **Micro Billing** - Handles new Micro Billing requests.
    
    
    5. **Messaging** - Allow Service Providers to sendo Mobile Terminated messages.
    
    6. **Web Hooks** - The platform send notifications (also known as *Data Syncs*) to the service providers. Those notifications contains information about the event that happened in the platform such as a subription in a service that belogns to the service provider.
    

        +-------------------------------------------------------------------------------------------------+
        |                                                                                                 |
        |    +----------------+        +----------------+                                                 |
        |    |Channel Provider|        |Service Provider+<-----------------------------------+            |
        |    +-------+--------+        +--------+-------+                                    |            |
        |            |                          |                                            |            |
        |            |   +----------------------------------------------+                    |            |
        |            |   |                      |                       |                    |            |
        |            v   v                      v                       v                    |            |
        |   +--------+---+---+       +----------+------+       +--------+----+      +--------+-------+    |
        |   |  Subscription  |       |  Micro Billing  |       |  Messaging  |      |   Web Hooks    |    |
        |   +----------------+       +-----------------+       +-------------+      +----------------+    |
        |                                                                                                 |
        +-------------------------------------------------------------------------------------------------+


  version: 1.0.0
  title: VAS Management API
  x-logo:
      url: "http://hgnunes.github.io/Logo.png"
  contact:
    email: contact@mobicare.com.br
host: sdp.mobicare.com.br
basePath: /v1
schemes:
  - https
consumes:
  - application/json
produces:
  - application/json
securityDefinitions:
  BEarer:
    type: apiKey
    description: >
      The clients of the API need to authenticate each request by including a key in every API request. The API keys are available in the Management Console
      
      The API uses JWT together with HTTP Bearer Authentication to authenticate a service or a channel provider. The JWT token carry priviledges for the provider and should not be pubicly shared.

    name: Authorization
    in: header

# tags are used for organizing operations
tags:
- name: channel providers
  description: Operations available to channel providers
- name: service providers
  description: Operations available to service providers
- name: notification
  description: Operations implemented by the service providers
- name: internal services
  description: Operations available to internal services
  
paths:
  /subscription:
    get:
      tags:
      - service providers
      summary: search for a subscription
      operationId: searchSubscription
      description: Searches for a subscription
      produces:
      - application/json
      parameters:
      - in: query
        name: userId
        type: string
        required: true
        description: User Identification
      - in: query
        name: serviceId
        type: integer
        required: false
        description: ServiceIdentification
      responses:
        200:
          description: returns a list of subscriptions
          schema:
            $ref: '#/definitions/SubscriptionItemArray'
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired user credentials
        403:
          description: service does not belong to the service provider
        409:
          description: user is already subscribed to the provider's service
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
    post:
      tags:
      - channel providers
      - service providers
      summary: creates a subscription
      operationId: addSubscription
      description: Creates a new subscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: subscriptionItem
        description: Subscription item to add
        schema:
          $ref: '#/definitions/SubscriptionCreateItem'
      responses:
        202:
          description: subscription request accepted, a callback will be sent to the provider after processing it
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired user credentials
        403:
          description: service does not belong to the service provider
        409:
          description: user is already subscribed to the provider's service
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /subscription/{subscriptionId}:
    put:
      tags:
      - internal services
      summary: updates an subscription after successfully charging the user
      operationId: updateSubscription
      description: Updates an existing subscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscriptionId
        in: path
        description: Subscription Id
        required: true
        type: integer
      - in: body
        name: subscriptionItem
        description: Subscription item to add
        schema:
          $ref: '#/definitions/SubscriptionRenewItem'
      responses:
        202:
          description: subscription request accepted, a callback will be sent to the provider after processing it
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired user credentials
        403:
          description: service does not belong to the service provider
        409:
          description: user is not subscribed to the service
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /subscription/cancel/{subscriptionId}:
    post:
      tags:
      - channel providers
      summary: cancel a subscription
      operationId: cancelSubscription
      description: Cancel an existing subscription
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscriptionId
        in: path
        description: Subscription Id
        required: true
        type: integer
      - in: body
        name: subscriptionItem
        description: Subscription item to add
        schema:
          $ref: '#/definitions/SubscriptionCancelItem'
      responses:
        202:
          description: subscription request accepted, a callback will be sent to the provider after processing it
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired user credentials
        403:
          description: service does not belong to the service provider
        409:
          description: user is not subscribed to the service
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /microbilling:
    post:
      tags:
      - service providers
      summary: Generates a one-time Billing
      operationId: microBilling
      description: Micro Billing for one-time charges
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: billingItem
        description: Information for the one time charge.
        schema:
          $ref: '#/definitions/BillingItem'
      responses:
        200:
          description: user was succesfully charged
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired  credentials
        402:
          description: user does not have enough balance
        403:
          description: service does not belong to the service provider
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /notification/{subscriptionId}:
    post:
      tags:
      - notification
      summary: Notify the service provider about an event
      operationId: notifyEvent
      description: Every time  subscription changes its state a notification is sent to the service provider
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - name: subscriptionId
        in: path
        description: Subscription Id
        required: true
        type: integer
      - in: body
        name: notificationItem
        description: Notification containing the information about an event regarding the subscription
        schema:
          $ref: '#/definitions/NotificationItem'
      responses:
        200:
          description: service provider succesfully processed the notification
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired  credentials
        403:
          description: service does not belong to the service provider
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /messaging/mt:
    post:
      tags:
      - service providers
      summary: Receive a mobile terminated message request
      operationId: mtReceive
      description: API for service providers to request a Mobile Terminated message do be sent
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: moItem
        description: Notification containing the information about a mobile terminated message
        schema:
          $ref: '#/definitions/MtItem'
      responses:
        200:
          description: succesfully processed the notification
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired  credentials
        403:
          description: service does not belong to the service provider
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
  /messaging/mo:
    post:
      tags:
      - notification
      summary: Notify the service provider about a mobile originated message
      operationId: moReceive
      description: Notification sent every time a mobile originated message is sent to the service provider (excluding messages intercepted by the SDP platform)
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: moItem
        description: Notification containing the information about a mobile originated message
        schema:
          $ref: '#/definitions/MoItem'
      responses:
        200:
          description: service provider succesfully processed the notification
        400:
          description: invalid input, object invalid
        401:
          description: invalid or expired  credentials
        403:
          description: service does not belong to the service provider
        500:
          description: unkown error
        503:
          description: number of transactions per second exceed
definitions:
  SubscriptionCreateItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - subscriptionChannel
    - createDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      subscriptionChannel:
        type: string
        example: WEB
      tags:
        type: array
        items:
          type: string
        example: ["promotion", "foo", "campaign"]
      createDate:
        type: string
        format: date-time
        example: "2018-01-01T10:10:33.001Z"
      transactionId:
        type: string
        example: "1SDJFS-SDJSFS-0080DF"
  SubscriptionRenewItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - stepId
    - price
    - period
    - paymentDate
    - nextPaymentDate
    - transactionId
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      stepId:
        type: integer
        example: 5430222
      price:
        type: integer 
        description: Price in cents
        example: 199
      period:
        type: integer
        description: Period in seconds
        example: 10080
      paymentDate:
        type: string
        format: date-time
        example: "2018-01-01T10:10:33.001Z"
      nextPaymentDate:
        type: string
        format: date-time
        example: "2018-01-08T10:10:33.001Z"
      transactionId:
        type: string
        example: "1SDJFS-SDJSFS-0080DF"
  SubscriptionCancelItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - cancelChannel
    - cancelDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      cancelChannel:
        type: string
        example: CUSTOMER_SERVICE
      cancelDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z"
  SubscriptionItemArray:
    type: array
    items:
      $ref: '#/definitions/SubscriptionItem' 
  SubscriptionItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - subscriptionChannel
    - createDate
    - nextPaymentDate
    properties:
      subscriptionId:
        type: integer
        example: 54322145522
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      subscriptionChannel:
        type: string
        example: WEB
      tags:
        type: array
        items:
          type: string
        example: ["foo", "bar", "campaign"]
      createDate:
        type: string
        format: date-time
        example: "2018-01-01T10:10:33.001Z"
      nextPaymentDate:
        type: string
        format: date-time
        example: "2018-01-08T10:10:33.001Z"
      cancelChannel:
        type: string
        example: CUSTOMER_SERVICE
      cancelDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z"
  NotificationItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - amountCharged
    - event
    - channel
    - eventDate
    - nextRenewalDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      amountCharged:
        type: integer
        example: 399
      event:
        type: string
        example: SUBSCRIBE
      channel:
        type: string
        example: SMS
      eventDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z"
      nextRenewalDate:
        type: string
        format: date-time
        example: "2018-01-21T10:10:33.001Z"
  BillingItem:
    type: object
    required:
    - userId
    - serviceId
    - offerId
    - eventDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      offerId:
        type: integer
        example: 5432
      eventDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z" 
  MoItem:
    type: object
    required:
    - userId
    - serviceId
    - shortCode
    - text
    - eventDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      shortCode:
        type: integer
        example: 405
      text:
        type: string
        example: "AJUDA"
      eventDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z"
  MtItem:
    type: object
    required:
    - userId
    - serviceId
    - shortCode
    - text
    - eventDate
    properties:
      userId:
        type: string
        example: 552199999999
      serviceId:
        type: integer
        example: 98772320
      shortCode:
        type: integer
        example: 405
      text:
        type: string
        example: "Acesse o melhor App em http://www.apps.com"
      eventDate:
        type: string
        format: date-time
        example: "2018-01-14T10:10:33.001Z"  
